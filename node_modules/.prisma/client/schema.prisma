// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Transactions Transaction[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  Products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id                 Int                 @id @default(autoincrement())
  name               String
  price              Float
  stock              Int                 @default(0)
  categoryId         Int
  Category           Category            @relation(fields: [categoryId], references: [id])
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  TransactionDetails TransactionDetail[]
}

model Transaction {
  id          Int                 @id @default(autoincrement())
  totalAmount Float
  paymentType String
  userId      Int
  User        User                @relation(fields: [userId], references: [id])
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  details     TransactionDetail[]
}

model TransactionDetail {
  id            Int         @id @default(autoincrement())
  transactionId Int
  productId     Int
  quantity      Int
  price         Float
  Transaction   Transaction @relation(fields: [transactionId], references: [id])
  Product       Product     @relation(fields: [productId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
